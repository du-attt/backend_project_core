// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_project_core.Models;

#nullable disable

namespace backend_project_core.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231221071241_InvoiceDetail-Migration")]
    partial class InvoiceDetailMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_project_core.Data.CartDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("_idProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("idCart")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("_idProduct");

                    b.HasIndex("idCart");

                    b.ToTable("CartDetails", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.Carts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idUser");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.Categories", b =>
                {
                    b.Property<string>("_id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("_id");

                    b.Property<string>("categoryImg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("description")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.HasKey("_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("backend_project_core.Data.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idUser");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.InvoiceDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("_idProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("idInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("_idProduct");

                    b.HasIndex("idInvoice");

                    b.ToTable("InvoiceDetail", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.Products", b =>
                {
                    b.Property<string>("_id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("_id");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("description")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("newPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("rating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3, 1)");

                    b.Property<bool>("trending")
                        .HasColumnType("bit");

                    b.Property<string>("weight")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("backend_project_core.Data.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.WishlishDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("_idProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("idWishlish")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("_idProduct");

                    b.HasIndex("idWishlish");

                    b.ToTable("WishlishDetails", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.Wishlists", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idUser");

                    b.ToTable("Wishlists", (string)null);
                });

            modelBuilder.Entity("backend_project_core.Data.CartDetails", b =>
                {
                    b.HasOne("backend_project_core.Data.Invoice", null)
                        .WithMany("CartDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("backend_project_core.Data.Products", "Products")
                        .WithMany("CartDetails")
                        .HasForeignKey("_idProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartDetails_Product");

                    b.HasOne("backend_project_core.Data.Carts", "Carts")
                        .WithMany("CartDetails")
                        .HasForeignKey("idCart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartDetails_Cart");

                    b.Navigation("Carts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("backend_project_core.Data.Carts", b =>
                {
                    b.HasOne("backend_project_core.Data.Users", "Users")
                        .WithMany("Carts")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cart_User");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("backend_project_core.Data.Invoice", b =>
                {
                    b.HasOne("backend_project_core.Data.Users", "Users")
                        .WithMany("Invoices")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Invoice_User");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("backend_project_core.Data.InvoiceDetail", b =>
                {
                    b.HasOne("backend_project_core.Data.Products", "Products")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("_idProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceDetails_Product");

                    b.HasOne("backend_project_core.Data.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("idInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceDetail_Invoice");

                    b.Navigation("Invoice");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("backend_project_core.Data.WishlishDetails", b =>
                {
                    b.HasOne("backend_project_core.Data.Products", "Products")
                        .WithMany("WishlishDetails")
                        .HasForeignKey("_idProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_WishlishDetails_Product");

                    b.HasOne("backend_project_core.Data.Wishlists", "Wishlists")
                        .WithMany("WishlishDetails")
                        .HasForeignKey("idWishlish")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_WishlishDetails_Cart");

                    b.Navigation("Products");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("backend_project_core.Data.Wishlists", b =>
                {
                    b.HasOne("backend_project_core.Data.Users", "Users")
                        .WithMany("Wishlists")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Wishlish_User");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("backend_project_core.Data.Carts", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("backend_project_core.Data.Invoice", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("backend_project_core.Data.Products", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("InvoiceDetails");

                    b.Navigation("WishlishDetails");
                });

            modelBuilder.Entity("backend_project_core.Data.Users", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Invoices");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("backend_project_core.Data.Wishlists", b =>
                {
                    b.Navigation("WishlishDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
